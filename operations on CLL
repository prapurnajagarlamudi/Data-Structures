// circular linked list 
#include<stdio.h>
#include<stdlib.h>

struct node {
       int data;
       struct node* next;
}*newnode,*temp,*head=NULL,*tail=NULL;

void create ()
{
       char ch;
       do
       {
       newnode=(struct node*)malloc(sizeof(struct node));
       printf("Enter the data");
       scanf("%d",&newnode->data);
       newnode->next=NULL;
       if (head==NULL)
       {
           head=newnode;
           tail=newnode;
           newnode->next=head;
       }
       else
       {
           tail->next=newnode;
           tail=newnode;
           tail->next=head;
       }
       printf("Enter c-continue and e-exit");
       scanf(" %c",&ch);
       }
       while(ch == 'c');
}

void display ()
{
     temp=head;
     while(temp->next!=head)
     {
          printf("%d\n",temp->data);
          temp=temp->next;
     }
     printf("%d\n",temp->data);
}

void insert_beg ()
{
    newnode=(struct node*)malloc(sizeof(struct node));
    printf("enter the data");
    scanf("%d",&newnode->data);
    newnode->next=head;
    tail->next=newnode;
    head=newnode;
}

void insert_end ()
{
    newnode=(struct node*)malloc(sizeof(struct node));
    printf("enter the data");
    scanf("%d",&newnode->data);
    tail->next=newnode;
    newnode->next=head;
    tail=newnode;
}

void insert_pos()
{
    int pos,i=0;
    printf("enter the position");
    scanf("%d",&pos);
    temp=head;
    while(i<pos-1)
    {
        temp=temp->next;
        i=i+1;
    }
    newnode=(struct node*)malloc(sizeof(struct node));
    printf("Enter the data");
    scanf("%d",&newnode->data);
    newnode->next=temp->next;
    temp->next=newnode;
}

void delete_beg()
{
    temp=head;
    head=head->next;
    tail->next=head;
}

void delete_pos ()
{
    int pos,i=0;
    printf("enter the position");
    scanf("%d",&pos);
    temp=head;
    while(i<pos-1)
    {
        temp=temp->next;
        i=i+1;
    }
    temp->next=temp->next->next;
}

void delete_end()
{
    temp=head;
    while(temp->next!=tail)
    {
        temp=temp->next;
    }
    temp->next=head;
    tail=temp;
}

void count ()
{
     int c=0;
     temp=head;
     while(temp->next!=head)
     {
          printf("%d\n",temp->data);
          temp=temp->next;
          c=c+1;
     }
     printf("%d\n",temp->data);
     c=c+1;
     printf("count is %d",c);
}

void reverse ()
{
        struct node* temp=head;
        struct node* prev=head;
        struct node* current=head;
        current=current->next;
        temp=temp->next->next;
        while(current!=head)
        {
            current->next=prev;
            prev=current;
            current=temp;
            temp=temp->next;
        }
        head=prev;
        current->next=head;
}

void main ()
{
    int choice;
    printf("1-creation\n2display\n3-insert beg\n4-insert end\n5-insert pos\n6-delete beg\n7-delete pos\n8-delete end\n9-reverse\n10-count\n");
    printf("enter the choice");
    scanf("%d",&choice);
    if (choice==1)
    {
    create();
    }
    if (choice==2)
    {
    create();
    display();
    }
    if (choice==3)
    {
    create();
    printf("Before insertion\n");
    display();
    insert_beg();
    printf("After insertion\n");
    display();
    }
    if (choice==4)
    {
    create();
    printf("Before insertion\n");
    display();
    insert_pos();
    printf("After insertion\n");
    display();
    }
    if (choice==5)
    {
    create();
    printf("Before insertion\n");
    display();
    insert_end();
    printf("After insertion\n");
    display();
    }
    if (choice==6)
    {
    create();
    printf("Before deletion\n");
    display();
    delete_beg();
    printf("After deletion\n");
    display();
    }
    if (choice==7)
    {
    create();
    printf("Before deletion\n");
    display();
    delete_pos();
    printf("After deletion\n");
    display();
    }
    if (choice==8)
    {
    create();
    printf("Before deletion\n");
    display();
    delete_end();
    printf("After deletion\n");
    display();
    }
    if (choice==9)
    {
    create();
    printf("Before reverse\n");
    display();
    reverse();
    printf("After reverse\n");
    display();
    }
    if (choice==10)
    {
    create();
    count();
    }
}
