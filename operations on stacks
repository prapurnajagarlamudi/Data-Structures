//operations on stack using SLL
//last in first out
#include<stdio.h>
#include<stdlib.h>
struct node
{
    int data;
    struct node* next;
}*newnode,*temp,*top=NULL;

void push()
{
    int data;
    printf("Enter the data to insert");
    scanf("%d",&data);
    if(top==NULL)
    {
        newnode=(struct node*)malloc(sizeof(struct node));
        newnode->data=data;
        newnode->next=NULL;
        top=newnode;
    }
    else
    {
        newnode=(struct node*)malloc(sizeof(struct node));
        newnode->data=data;
        newnode->next=top;
        top=newnode;
    }
    printf("Item is pushed\n");
}

void pop()
{
    if(top==NULL)
    {
        printf("Underflow\n");
    }
    else
    {
        temp=top;
        top=top->next;
        temp->next=NULL;
    }
    printf("Item is poped\n");
}

void display()
{
    if(top==NULL)
    {
        printf("Stack is empty\n");
    }
    else
    {
        printf("Elements in the stack are:\n");
        temp=top;
        while(temp!=NULL)
        {
            printf("%d\n",temp->data);
            temp=temp->next;
        }
    }
}

void main()
{
    int choice=0;
    while(choice!=4)
    {
        printf("1-push\n2-pop\n3-display\n");
        printf("Enter choice");
        scanf("%d",&choice);
        switch(choice)
        {
            case 1 : push();
                     break;
            case 2 : pop();
                     break;
            case 3 : display();
                     break;
            default : printf("Enter valid choice");
        }
    }
}
output:
1-push
2-pop
3-display
Enter choice
1
Enter the data to insert12
Item is pushed
Enter choice
1
Enter the data to insert22
Item is pushed
Enter choice
1
Enter the data to insert32
Item is pushed
Enter choice
2
Item is poped
Enter choice
3
Elements in the stack are:
22
12
Enter choice
4
Enter valid choice


//operations on stack using arrays
//last in first out
#include<stdio.h>
#define size 10

int stack[size];
int top=-1;

void push()
{
    int item;
        if(top>size-1)
        {
            printf("overflow\n");
        }
        else
        {
            printf("enter the item to push:\n");
            scanf("%d",&item);
            top++;
            stack[top]=item;
        }
}

void pop()
{
    if(top<0)
    {
        printf("underflow\n");
    }
    else
    {
        top--;
    }
}

void display()
{
    int i;
    printf("The elements in the stack are:\n");
    for(i=0;i<=top;i++)
    {
        printf("%d ",stack[i]);
    }
}

void main()
{
    int choice=0;
    printf("1-push\n2-pop\n3-display\n");
    while(choice<4)
    {
        printf("enter your choice:\n");
        scanf("%d",&choice);
        switch(choice)
        {
            case 1: push();
                    break;
            case 2: pop();
                    break;
            case 3: display();
                    break;
            default: printf("Enter valid choice\n");
        }
    }
}


output:

1-push
2-pop
3-display
enter your choice:
1
enter the item to push:
12
enter your choice:
1
enter the item to push:
22
enter your choice:
1
enter the item to push:
32
enter your choice:
2
enter your choice:
3
The elements in the stack are:
12 22 enter your choice:
4
Enter valid choice
