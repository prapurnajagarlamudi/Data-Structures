//operations on linear/simple queue using arrays
#include <stdio.h>
#define size 10
int q[size],front=0,rear=0;
void enqueue()
{
    int value;
    if(rear==size)
    {
        printf("You cannot enqueue\n");
    }
    else
    {
        printf("enter element to enqueue:\n");
        scanf("%d",&value);
        q[rear]=value;
        rear++;
    }
}

void dequeue()
{
    if(front==rear)
    {
        printf("You cannot dequeue\n");
    }
    else
    {
        printf("value deleted is: %d\n",q[front]);
        front++;
    }
}

void display()
{
    if(rear==front)
    {
        printf("queue is empty\n");
    }
    else
    {
        printf("elements in queue are:\n");
        for(int i=front;i<rear;i++)
        {
            printf("%d\n",q[i]);
        }
    }

}
void main()
{
    int choice=0;
    printf("1-enqueue\n2-dequeue\n3-display\n");
    while(choice<4)
    {
        printf("enter ur choice\n");
        scanf("%d",&choice);
        switch(choice)
        {
            case 1: enqueue();
                    break;
            case 2: dequeue();
                    break;
            case 3: display();
                    break;
            default : printf("Enter valid choice");
        }
    }
}

output:

1-enqueue
2-dequeue
3-display
enter ur choice
1
enter element to enqueue:
12
enter ur choice
1
enter element to enqueue:
22
enter ur choice
1
enter element to enqueue:
32
enter ur choice
1
enter element to enqueue:
42
enter ur choice
2
value deleted is: 12
enter ur choice
3
elements in queue are:
22
32
42
enter ur choice
4


//operations on linear/simple queue using SLL
#include<stdio.h>
#include<stdlib.h>

struct node
{
    int data;
    struct node* next;
}*newnode,*temp,*rear=NULL,*front=NULL;

void enqueue()
{
    int value;
    newnode=(struct node*)malloc(sizeof(struct node));
    printf("Enter the value\n");
    scanf("%d",&value);
    newnode->data=value;
    newnode->next=NULL;
    if(rear==NULL)
    {
        rear=front=newnode;
    }
    else
    {
        rear->next=newnode;
        rear=newnode;
    }
}

void dequeue()
{
    if(rear==NULL && front==NULL)
    {
        printf("Queue is Empty\n");
    }
    else
    {
        temp=front;
        front=front->next;
        temp->next=NULL;
    }
}

void display()
{
    temp=front;
    if(rear==NULL && front==NULL)
    {
        printf("Queue is empty\n");
    }
    else
    {
        printf("Elements in the queue are:\n");
        while(temp!=NULL)
        {
            printf("%d\n",temp->data);
            temp=temp->next;
        }
    }
}

void main ()
{
    int choice=0;
    printf("1-enqueue\n2-dequeue\n3-display\n");
    while(choice<3)
    {
        printf("Enter the choice\n");
        scanf("%d",&choice);
        switch(choice)
        {
            case 1: enqueue();
                    break;
            case 2: dequeue();
                    break;
            case 3: display();
                    break;
            default : printf("Enter valid choice\n");
        }
    }
}


output:

1-enqueue
2-dequeue
3-display
Enter the choice
1
Enter the value
12
Enter the choice
1
Enter the value
22
Enter the choice
1
Enter the value
32
Enter the choice
2
Enter the choice
3
Elements in the queue are:
22
32
Enter choice
4
Enter valid choice
